$px: rpx;
$rate: 2;

/*
 * @desc 生成状态样式
 * 
 * @params $attr 属性
 * @params $data 状态数据
 */

@mixin genList($attr, $data) {
    @each $name, $value in $data {
        &--#{$name} {
            #{$attr}: #{$value};
        }
    }
}

page {
    /* 主色 */
    --global-color-main: #ee0a42;

    /* 背景色 */
    --global-bg-n1: #f7f8fa;
    --global-bg-n2: #f2f3f5;

    /* 边框、线色 */
    --global-border-n3: #ebedf0;
    --global-border-n4: #dcdee0;

    /* 文字色 */
    /* disable、提示文字等 */
    --global-font-n5: #c8c9cc;
    /* 辅助、说明文字 */
    --global-font-n6: #969799;
    /* 主文字2 */
    --global-font-n7: #646566;
    /* 主文字1 */
    --global-font-n8: #323233;
    /* 黑色 */
    --global-color-b: #000000;
    /* 白色 */
    --global-color-w: #ffffff;

    /* 功能色 */
    /* 文字链颜色 */
    --global-color-mw: #576b95;
    /* 成功色 */
    --global-color-mg: #07c160;
    /* 报错色 */
    --global-color-mr: #ee0a24;
    /* 通知消息文本色 */
    --global-color-o4: #ed6a0c;
    /* 通知消息背景色 */
    --global-color-y1: #fffbeb;
    /* 文字辅助色 */
    --global-color-cy4: #faab0c;
}

/**********************布局**********************/
.float {
    display: flow-root;

    &::after {
        display: block;
        content: " ";
        clear: both;
    }

    &--lt {
        float: left;
    }

    &--rt {
        float: right;
    }
}

.flex {
    $name: &;
    display: flex;

    &--inline {
        display: inline-flex;
    }

    &--center {
        @extend #{$name};
        justify-content: center;
        align-content: center;
        align-items: center;

        &--v {
            @extend #{$name};
            align-content: center;
            align-items: center;
        }

        &--h {
            @extend #{$name};
            justify-content: center;
        }
    }

    // 常用组合
    &--comp {
        display: flex;
    }

    &--sb {
        @extend #{$name};
        justify-content: space-between;

        &--col {
            @extend #{$name};
            justify-content: space-between;
            flex-direction: column;
        }
    }

    &--sa {
        @extend #{$name};
        justify-content: space-around;
    }

    &--wrap {
        @extend #{$name};
        flex-wrap: wrap;
    }

    // align
    &__align {
        &__cnt {
            &--c {
                align-content: center;
            }

            &--fe {
                align-content: flex-end;
            }
        }

        &__item {
            &--c {
                align-items: center;
            }

            &--fe {
                align-items: flex-end;
            }
        }

        &__self {
            &--fe {
                align-self: flex-end;
            }
        }
    }

    //just
    &__just {
        &--c {
            justify-content: center;
        }

        &--fe {
            justify-content: flex-end;
        }

        &--fs {
            justify-content: flex-start;
        }
    }

    &__wrap {
        flex-wrap: wrap;
    }

    //flex-direction
    &__dir {
        &--col {
            flex-direction: column;
        }

        &--row {
            flex-direction: row;
        }
    }

    &__item {
        flex: 1;
    }
}

/**********************位置**********************/

.fixed {
    position: fixed;
    bottom: 0;
    left: 0;
}

.absolute {
    position: absolute;
    top: 0;
    left: 0;
}

.relative {
    position: relative;
}

.z-index {
    $config: -1, 0, 1, 9, 10, 20, 30, 99, 999;

    @each $index in $config {
        &--#{$index} {
            z-index: $index;
        }
    }
}

/**********************样式**********************/

.box {
    &--square {
        position: relative;
        padding-left: 100%;
        padding-top: 100%;
        width: 0;
    }

    &--inline {
        display: inline;

        &--block {
            display: inline-block;
        }
    }

    &__size {
        box-sizing: border-box;
    }

    &__over {
        overflow: hidden;
    }

    &__width {
        width: 100%;
        &--mc {
            width: max-content;
        }
    }
}

.color {
    $config: (
        main: "var(--global-color-main)",
        n5: "var(--global-font-n5)",
        n6: "var(--global-font-n6)",
        n7: "var(--global-font-n7)",
        n8: "var(--global-font-n8)",
        b: "var(--global-color-b)",
        w: "var(--global-color-w)",
        /* 文字链颜色 */ mv: "var(--global-color-mv)",
        mg: "var(--global-color-mg)",
        /* 报错色 */ mr: "var(--global-color-mr)",
        /* 通知消息文本色 */ o4: "var(--global-color-o4)",
        /* 通知消息背景色 */ y1: "var(--global-color-y1)",
        /* 文字辅助色 */ cy4: "var(--global-color-cy4)",
        current: "currentColor",
    );

    @include genList("color", $config);
}

.bg {
    // background-color
    &__color {
        $config: (
            main: "var(--global-color-main)",
            cyan: "cyan",
            blank: "blank",
            white: "white",
            pink: "pink",
            orange: "orange",
            yellow: "yellow",
            current: "currentColor",
            cy4: "var(--global-color-cy4)",
            n1: "var(--global-bg-n1)",
            n2: "var(--global-bg-n2)",
            n8: "var(--global-font-n8)",
        );

        @include genList("background-color", $config);
    }

    &__attach {
        &--fixed {
            background-attachment: fixed;
        }
    }

    // position
    &__ps {
        &--center {
            background-position: center;
        }
    }

    &__size {
        &--stretch {
            background-size: 100% 100%;
        }

        &--cover {
            background-size: cover;
        }
    }
}

/*
 * 创建margin和padding基本样式
 */
$attrList: "margin" "padding";
$attrConfig: (
    top: top,
    right: right,
    bottom: bottom,
    left: left,
    tb: top bottom,
    lr: left right,
);

$start: 0;
$end: 40;

@each $attr in $attrList {
    .#{$attr} {

        @for $size from $start to $end {
            &--#{$size} {
                #{$attr}: #{$rate * $size}$px;
            }
        }

        @each $attrName, $attrValue in $attrConfig {
            &__#{$attrName} {
                @for $size from $start to $end {
                    &--#{$size} {
                        @each $item in $attrValue {
                            #{$attr}-#{$item}: #{$rate * $size}$px;
                        }
                    }
                }

                &--auto {
                    @each $item in $attrValue {
                        #{$attr}-#{$item}: auto;
                    }
                }

            }
        }

       
    }
}

.opacity {
    @for $opacity from 0 through 10 {
        @if $opacity < 10 {
            &--f#{$opacity} {
                opacity: #{$opacity/10};
            }
        } @else {
            &--#{$opacity/10} {
                opacity: #{$opacity/10};
            }
        }
    }
}

/**
 * 字体 
 */
.font {
    $standard: (
        t12 30 10 700 /* 超大标题 */,
        t11 26 8 500 /* 大标题 */,
        t10 20 8 500 /* 标准标题 */,
        t9 18 6 500 /* 标准标题 */,
        t8 17 6 400 /* 正文5 大部分正文+导航栏文字 */,
        t7 16 6 400 /* 正文5 大部分正文+导航栏文字 */,
        t6 15 6 400 /* 正文4 信息较多且需要多呈现时 */,
        t5 14 6 400 /* 正文3 信息较多且需要多呈现时 */,
        t4 13 6 400 /* 正文2 对主题进行释义的文字+协议条款等文字 */,
        t3 12 4 400 /* 正文1 对主题进行释义的文字+协议条款等文字 */,
        t2 10 4 500 /* 标签栏辅助文字 */,
        t1 8 2 400 /* 表单中数据文字 */
    );

    @each $name, $size, $lineHeight, $weight in $standard {
        &--#{$name} {
            font-size: #{$size * $rate}$px;
            line-height: #{$size * $rate + $lineHeight * $rate}$px;
            font-weight: $weight;
        }
    }

    &__size {
        @for $size from 8 to 30 {
            &--#{$size} {
                font-size: #{$size * $rate}$px;
            }
        }
    }

    // font-weight
    &__weight {
        $weightList: (
            3: 300,
            4: 400,
            5: 500,
            6: 600,
            7: 700,
        );

        @each $name, $value in $weightList {
            &--#{$name} {
                font-weight: $value;
            }
        }
    }

    &__style {
        &--i {
            font-style: italic;
        }
    }
}

.text {
    &__over {
        &--ellipsis {
            $name: &;
            overflow: hidden;
            display: -webkit-box;
            text-overflow: ellipsis;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            color: currentColor;

            &--1 {
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }

            &--3 {
                @extend #{$name};
                -webkit-line-clamp: 3;
            }
        }
    }

    &__underline {
        &--default {
            text-decoration: line-through;
        }

        position: relative;
        &::after {
            position: absolute;
            top: 0.7em;
            left: 0;
            padding: 0 #{$rate * 1}$px;
            display: block;
            content: " ";
            width: 100%;
            height: 1px;
            background-color: currentColor;
        }
    }

    // line-height
    &__lh {
        &--f8 {
            line-height: 0.8;
        }
        &--1 {
            line-height: 1;
        }
    }

    // text-align
    &__align {
        $config: (
            lt: left,
            c: center,
            rt: right,
        );
        @each $name, $value in $config {
            &--#{$name} {
                text-align: $value;
            }
        }
    }

    // white-space
    &__ws {
        &--no {
            white-space: nowrap;
        }

        &--warp {
            white-space: normal;
        }
    }

    &__max {
        $parent: ".text__over--ellipsis--1";

        @for $size from 2 through 13 {
            &--#{$size} {
                @extend #{$parent};
                max-width: #{$size}em;
            }
        }
    }
}

.border {
    border: 0.5px solid currentColor;

    $attrList: top bottom left right;
    $config: (f5 0.5, 1, 2, 3, 4, 5);

    @each $key, $value in $config {
        @if not $value {
            $value: $key;
        }
        &--#{$key} {
            border: #{$value}px solid;
        }
    }

    @each $attr in $attrList {
        &__#{$attr} {
            @each $key, $value in $config {
                @if not $value {
                    $value: $key;
                }
                &--#{$key} {
                    border-#{$attr}: #{$value}px solid;
                }
            }
        }
    }

    // border-color
    &__color {
        $config: (
            cyan: "cyan",
            blank: "blank",
            white: "white",
            pink: "pink",
            orange: "orange",
            yellow: "yellow",
            current: "currentColor",
            main: "var(--global-color-main)",
            n3: "var(--global-border-n3)",
            n4: "var(--global-border-n4)",
        );

        @include genList("border-color", $config);
    }

    &__radius {
        border-radius: 1000px;

        @for $size from 4 through 20 {
            &--#{$size} {
                border-radius: #{$size * $rate}$px;
            }
        }
    }
}

.image {
    &--stretch {
        width: 100%;
        height: 100%;

        &--abs {
            position: absolute;
            top: 0;
            left: 0;
            overflow: hidden;
            width: 100%;
            height: 100%;
        }
    }

    &__margin {
        &--clear {
            vertical-align: middle;
            line-height: 1;
        }
    }
}

.shadow {
    box-shadow: 0 4rpx 24rpx 0 rgba(100, 101, 102, 0.12);
}

.button {

    &--submit {
        position: fixed;
        bottom: #{40 * $rate}$px;
        left: #{16 * $rate}$px;

        width: calc(100% - #{16 * $rate * 2}#{$px});
        height: #{40 * $rate}$px;
        text-align: center;
        line-height: #{40 * $rate}$px;
        border-radius: #{40 * $rate / 2}$px;

        &--fill {
            height: #{40 * $rate}$px;
        }
    }

    &--disable {
        opacity: 0.5;
    }
}

.scroll {
    &__fill {
        &::after {
            display: block;
            content: "";
            min-width: 0.1px;
        }
    }
}
